{"ast":null,"code":"var _jsxFileName = \"/Users/cloudylopez/Accelerate/capstone/react-flask-app/src/Pages/AttackPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card } from '../Components/Card/card';\nimport { Form } from '../Components/Form/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AttackPage = () => {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  const [addTodo, setAddTodo] = useState('');\n  useEffect(() => {\n    fetch('/api').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setTodo(data));\n  }, []);\n\n  const handleFormChange = inputValue => {\n    setAddTodo(inputValue);\n  };\n\n  const handleFormSubmit = () => {\n    fetch('/api/create', {\n      method: 'POST',\n      body: JSON.stringify({\n        content: addTodo\n      }),\n      headers: {\n        \"Conent-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(message => {\n      console.log(message);\n      setAddTodo('');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      userInput: addTodo,\n      onFormChange: handleFormChange,\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      listTodos: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AttackPage, \"45Ja5tGjMfV/uaS2qYn2eVTmbt8=\");\n\n_c = AttackPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttackPage\");","map":{"version":3,"sources":["/Users/cloudylopez/Accelerate/capstone/react-flask-app/src/Pages/AttackPage.js"],"names":["React","useState","useEffect","Card","Form","AttackPage","todo","setTodo","addTodo","setAddTodo","fetch","then","response","ok","json","data","handleFormChange","inputValue","handleFormSubmit","method","body","JSON","stringify","content","headers","message","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,IAAT,QAAqB,yBAArB;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAE5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,IAAI,IAAIR,OAAO,CAACQ,IAAD,CAJvB;AAKH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AACrCR,IAAAA,UAAU,CAACQ,UAAD,CAAV;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BR,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACjBS,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,OAAO,EAACf;AADS,OAAf,CAFW;AAKjBgB,MAAAA,OAAO,EAAE;AACL,uBAAe;AADV;AALQ,KAAhB,CAAL,CAQGb,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EARpB,EASCH,IATD,CASMc,OAAO,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAhB,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KAZD;AAaH,GAdD;;AAeA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAED,OAAjB;AAA0B,MAAA,YAAY,EAAEQ,gBAAxC;AAA0D,MAAA,YAAY,EAAEE;AAAxE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEZ;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAtCM;;GAAMD,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card } from '../Components/Card/card';\nimport { Form } from '../Components/Form/form';\n\nexport const AttackPage = () => {\n\n    const [todo, setTodo] = useState([])\n    const [addTodo, setAddTodo] = useState('')\n\n    useEffect(() => {\n        fetch('/api').then(response => {\n            if(response.ok){\n                return response.json()\n            } \n        }).then(data => setTodo(data))\n    }, [])\n\n    const handleFormChange = (inputValue) => {\n        setAddTodo(inputValue)\n    }\n\n    const handleFormSubmit = () => {\n        fetch('/api/create', {\n            method: 'POST',\n            body: JSON.stringify({\n                content:addTodo\n            }),\n            headers: {\n                \"Conent-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n        .then(message => {\n            console.log(message)\n            setAddTodo('')\n        })\n    }    \n    return(\n        <>\n            <Form userInput={addTodo} onFormChange={handleFormChange} onFormSubmit={handleFormSubmit}/>\n            <Card listTodos={todo}/>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}